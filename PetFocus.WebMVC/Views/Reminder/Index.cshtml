@*@model IEnumerable<PetFocus.Models.ReminderModel.ReminderListItem>*@
@model PagedList.IPagedList<PetFocus.Models.ReminderModel.ReminderListItem>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Reminder</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@if (TempData.ContainsKey("SaveResult"))
{
    <div class="alert alert-success fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
        @TempData["SaveResult"]
    </div>
}
@using (Html.BeginForm("Index", "Reminder", FormMethod.Get))
{
    <p>
        Find by Pet name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Pet Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            Heartworm Med
        </th>
        <th>
            Rabies Vac
        </th>
        <th>
            Three Year Rabies
        </th>
        <th>
            Flea Treatment
        </th>
        <th>
            Nail Trim
        </th>
        <th>
            Trim Schedule
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Pet.PetName)
            </td>
            <td style="color: @((DateTime.Now - item.HeartwormMed).TotalDays > 30 ? "red" : "black" )" ;>
                @Html.DisplayFor(modelItem => item.HeartwormMed)
            </td>
            <td style="color: @((item.IsTimeForRabies) ? "red": "black")" ;>
                @Html.DisplayFor(modelItem => item.RabiesVac)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsThreeYearRabiesVac)
            </td>
            <td style="color: @((DateTime.Now - item.FleaTreatment).TotalDays > 30 ? "red" : "black" )" ;>
                @Html.DisplayFor(modelItem => item.FleaTreatment)
            </td>
            <td style="color: @((DateTime.Now - item.NailTrim).TotalDays > item.TrimSchedule ? "red" : "black" )" ;>
                @Html.DisplayFor(modelItem => item.NailTrim)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TrimSchedule)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ReminderId }) |
                @Html.ActionLink("Details", "Details", new { id = item.ReminderId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ReminderId })
            </td>
        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
